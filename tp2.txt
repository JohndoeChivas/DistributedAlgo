EXERCICE 1 

Q2) On peut créer n factoriel anneaux unidirectionnels.


EXERCICE 2

Q1)

- Chaque nœud a un identifiant unique et sait que les identifiants sont uniques
- Chaque nœud connaît son voisin
- Le nombre de nœuds dans le système est inconnu de chaque nœud 


Q3)

Meilleure cas = 2n donc 
Pire cas = n^2
Nb moyen : 

Q4)

Meilleur cas:
Pire cas: 


EXERCICE 3


Q2) 

-On prend le noeud d'ID 0 (car il est obligé d'en avoir un)
-Faire le tour de l'anneau pour connaitre la taille de l'anneau.
-Une fois la taille N connu de l'anneau, le noeud initiateur (ID 0) va envoyer son ID a son voisin et attend la reception d'un message apres le tour de l'anneau
-Chaque voisin qui recoit l'ID, l'incremente, se l'attribue et l'envoi à son tour a son voisin. 
-Une fois le tour effectué, l'anneau initiateur met fin à l'algorithme.


EXERCICE 4 


Remarque:
La topologie de la grille ne marche pas du fait que les tableaux multidimensionnels ont l'air de marcher différemment du C++ en langage D.
J'ai donc mis le code en commentaire mais je pesne que le raisonnement était quand même bon. :)
