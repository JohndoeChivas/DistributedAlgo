EXERCICE 1 

Q2) On peut créer n factoriel anneaux unidirectionnels.


EXERCICE 2


Q1)

- Chaque nœud a un identifiant unique et sait que les identifiants sont uniques
- Chaque nœud connaît son voisin
- Le nombre de nœuds dans le système est inconnu de chaque nœud 


Q3)

Sur 100 executions de 20 noeuds : 
-Meilleur cas : 75 messages échangés au total
-Pire cas : 123 messages échangés au total
-Moyenne : 92 messages échangés en moyenne

Remarque : 
Pour la question 3, j'ai transformé mon main en une fonction maintwo qui retourne le nombre total de message d'une execution et modifié également la fonction receiveAllFinalization.
Enfin j'ai créer une fonction main a la fin de mon code qui s'occupe de simuler les 100 executions et calculer le min, max et moyenne de ces 100 executions.

Q4)

Meilleur cas: 2^n
Pire cas: 1+2+3+4+...+n
d'apres CM :)


EXERCICE 3

Remarque : L'anneau est bidirectionnel à cause de la modification dans l'exercice 4 mais dans le code pour cette question, les processus se conduisent comme s'ils constituaient un anneau unidirectionnel.


Q2) 

-On prend le noeud d'ID 0 (car il est obligé d'en avoir un)
-Faire le tour de l'anneau pour connaitre la taille de l'anneau.
-Une fois la taille N connu de l'anneau, le noeud initiateur (ID 0) va envoyer son ID a son voisin et attend la reception d'un message apres le tour de l'anneau
-Chaque voisin qui recoit l'ID, l'incremente, se l'attribue et l'envoi à son tour a son voisin. 
-Une fois le tour effectué, l'anneau initiateur met fin à l'algorithme.


EXERCICE 4 

Remarque pour l'arbre binaire et la grille : obligé d'envoyer 2 fils pour l'AB et 4 voisins pour la grille, même si au reçu les processus initialise le nombre de fils et le nombre de voisins en fonction de l'indice i reçu pour l'arbre binaire, et des indices i et j reçus pour la grille.


